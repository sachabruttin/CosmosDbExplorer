<UserControl x:Class="CosmosDbExplorer.Views.ScaleAndSettingsTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:controls="clr-namespace:CosmosDbExplorer.Infrastructure.AvalonEdit"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:infrastructure="clr-namespace:CosmosDbExplorer.Infrastructure"
             xmlns:markup="clr-namespace:CosmosDbExplorer.Infrastructure.MarkupExtensions"
             xmlns:sdk="clr-namespace:Microsoft.Azure.Documents;assembly=Microsoft.Azure.Documents.Client"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded">
    <DockPanel>
        
        <GroupBox Header="Scale" DockPanel.Dock="Top" Margin="10,5">
            <StackPanel Margin="10,5">
                <!--<Label Content="Throughput (400 - 10,000 RU/s)"/>-->
                <Label>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Throughput ({0:N0} - {1:N0} RU/s)">
                                <Binding Path="MinThroughput" />
                                <Binding Path="MaxThroughput" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label>
                <xctk:IntegerUpDown Increment="1000" Minimum="{Binding MinThroughput}" Maximum="{Binding MaxThroughput}" 
                                    HorizontalAlignment="Left"
                                    Text="{Binding Throughput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width="150" Margin="20,0"/>

                <TextBlock Text="{Binding EstimatedPrice, StringFormat=Estimated spend (USD): {0}}"
                           Margin="20,0"/>
            </StackPanel>
        </GroupBox>

        <GroupBox Header="Settings" Margin="10,5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Margin="10,5">
                    <Label Content="Time to live" />
                    <StackPanel Orientation="Horizontal" Margin="20,5">
                        <RadioButton Content="Off" Style="{StaticResource SquareRadioButtonStyle}" Width="70" 
                                     IsChecked="{Binding OffTimeToLive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <RadioButton Content="On (no default)" Style="{StaticResource SquareRadioButtonStyle}" Width="130"
                                     IsChecked="{Binding NoDefaultTimeToLive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <RadioButton Content="On" Style="{StaticResource SquareRadioButtonStyle}" Width="70"
                                     IsChecked="{Binding OnTimeToLive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <StackPanel Visibility="{Binding PartitionKey, Converter={StaticResource nullToVisibilityConverter}}">
                        <Label Content="Partition Key" />
                        <TextBox Margin="20,5" IsReadOnly="True" Text="{Binding PartitionKey}" 
                                 Background="{x:Static SystemColors.ControlLightBrush}"/>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" Margin="20,5" Visibility="{Binding OnTimeToLive, Converter={StaticResource boolToVisibilityConverter}}">
                        <xctk:IntegerUpDown Value="{Binding TimeToLiveInSecond}" 
                                            Width="150" Height="22" VerticalContentAlignment="Center"
                                            Minimum="1" Increment="100" />
                        <TextBlock Text="second(s)" Margin="3,0" VerticalAlignment="Center" />
                    </StackPanel>
                </StackPanel>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>

                    <Label Content="Indexing Policy" Grid.Row="0" Margin="10,5" />
                    <avalonEdit:TextEditor x:Name="editor" Grid.Row="1" Grid.Column="0"
                                           SyntaxHighlighting="JSON"  
                                           Margin="-2,0,-2,-2"
                                           FontSize="10pt"
                                           FontFamily="Consolas"
                                           IsReadOnly="False" VerticalScrollBarVisibility="Auto"
                                           ShowLineNumbers="True"
                                           Document="{Binding Content, UpdateSourceTrigger=PropertyChanged}"
                                           IsModified="{Binding IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ContextMenu="{StaticResource JsonEditorContextMenu}">
                        <i:Interaction.Behaviors>
                            <controls:TextAreaZoomBehavior x:Name="zoomBehavior" ZoomLevel="{Binding Zoom, Converter={StaticResource logConverter}}"/>
                        </i:Interaction.Behaviors>
                    </avalonEdit:TextEditor>


                    <ScrollViewer Grid.Row="1" Grid.Column="1">
                        <StackPanel Grid.Row="0" Margin="10,5">

                            <Label Content="Automatic" />
                            <StackPanel Orientation="Horizontal" Margin="20,5">
                                <infrastructure:RadioButtonEx Content="Yes" Style="{StaticResource SquareRadioButtonStyle}" Width="70"
                                             RadioValue="True" RadioBinding="{Binding PolicyViewModel.IsAutomatic}"/>
                                <infrastructure:RadioButtonEx Content="No" Style="{StaticResource SquareRadioButtonStyle}" Width="70"
                                             RadioValue="False" RadioBinding="{Binding PolicyViewModel.IsAutomatic}" />
                            </StackPanel>

                            <Label Content="Indexing Mode" />
                            <StackPanel Orientation="Horizontal" Margin="20,5">
                                <infrastructure:RadioButtonEx Content="Consitent" RadioValue="Consistent" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                                <infrastructure:RadioButtonEx Content="Lazy" RadioValue="Lazy" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                                <infrastructure:RadioButtonEx Content="None" RadioValue="None" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                            </StackPanel>

                            <Expander Header="Included Paths" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ItemsControl ItemsSource="{Binding PolicyViewModel.IncludedPaths, ValidatesOnDataErrors=True}" AlternationCount="2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border x:Name="_rootPaths" BorderThickness="0.5" 
                                                        Margin="2" Padding="5" BorderBrush="DarkGray">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>

                                                        <Label Content="Path:" Grid.Row="0" Grid.Column="0" />
                                                        <xctk:WatermarkTextBox Watermark="" Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" Margin="2,2,7,2" />
                                                        <Button Command="{Binding DataContext.PolicyViewModel.RemoveIncludedPathCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                                                CommandParameter="{Binding}"
                                                                Grid.Row="0" Grid.Column="2"
                                                                Background="Transparent" BorderThickness="0" Margin="2">
                                                            <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                        </Button>

                                                        <Label Content="Indexes:" Grid.Row="1" Grid.Column="0" />
                                                        <ItemsControl ItemsSource="{Binding Indexes, ValidatesOnDataErrors=True}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Grid Margin="2">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto" />
                                                                            <ColumnDefinition Width="120" />
                                                                            <ColumnDefinition Width="120" />
                                                                            <ColumnDefinition Width="150" />
                                                                        </Grid.ColumnDefinitions>

                                                                        <Button Command="{Binding DataContext.RemoveIndexCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                                                                CommandParameter="{Binding}"
                                                                                Background="Transparent" BorderThickness="0" Margin="2">
                                                                            <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                                        </Button>

                                                                        <ComboBox Grid.Column="1" SelectedValue="{Binding Kind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2,7,2"
                                                                                  ItemsSource="{Binding Source={markup:EnumBindingSource {x:Type sdk:IndexKind}}}"/>
                                                                        <ComboBox Grid.Column="2" SelectedValue="{Binding DataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2,7,2"
                                                                                  ItemsSource="{Binding AvailableDataTypes}" />

                                                                        <Grid Grid.Column="3" Margin="2,2,7,2" HorizontalAlignment="Stretch">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="Auto" />
                                                                                <ColumnDefinition Width="*" />
                                                                            </Grid.ColumnDefinitions>

                                                                            <CheckBox Content="Max" IsChecked="{Binding IsMaxPrecision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                      VerticalAlignment="Center" Margin="2,0" Grid.Column="0"
                                                                                      Visibility="{Binding CanSetMaxPrecision, Converter={StaticResource boolToVisibilityConverter}}"
                                                                                      ToolTip="Maximum index precision (-1)"/>

                                                                            <xctk:ShortUpDown  Minimum="{Binding MinPrecision}" Maximum="{Binding MaxPrecision}" 
                                                                                               Margin="2,0" Grid.Column="1" 
                                                                                               Value="{Binding Precision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                                               Visibility="{Binding CanSetPrecision, Converter={StaticResource boolToVisibilityConverter}}"
                                                                                               Watermark="default is 3"/>
                                                                        </Grid>

                                                                    </Grid>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>

                                                        <Button Command="{Binding AddIndexCommand}"
                                                                Background="Transparent" BorderThickness="0"
                                                                Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Style="{StaticResource AddIcon}" />
                                                                <TextBlock Text="Add Index" Margin="5,0,0,0" />
                                                            </StackPanel>
                                                        </Button>
                                                    </Grid>
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                        <Setter Property="Background" Value="Transparent" TargetName="_rootPaths"/>
                                                    </Trigger>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter Property="Background" Value="WhiteSmoke" TargetName="_rootPaths"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <Button Command="{Binding PolicyViewModel.AddIncludedPathCommand}" Background="Transparent" BorderThickness="0"
                                            Grid.Row="1" HorizontalAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Style="{StaticResource AddIcon}" />
                                            <TextBlock Text="Add Included Path" Margin="5,0,0,0" />
                                        </StackPanel>
                                    </Button>

                                </Grid>
                            </Expander>

                            <Expander Header="Excluded Paths" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <ItemsControl ItemsSource="{Binding PolicyViewModel.ExcludedPaths, ValidatesOnDataErrors=True}" AlternationCount="2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border x:Name="_rootPaths" BorderThickness="0.5" 
                                                        Margin="2" Padding="5" BorderBrush="DarkGray">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>

                                                        <Label Content="Path:" Grid.Row="0" Grid.Column="0" />
                                                        <xctk:WatermarkTextBox Watermark="" Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" Margin="2,2,7,2" />
                                                        <Button Command="{Binding DataContext.PolicyViewModel.RemoveExcludedPathCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                                                CommandParameter="{Binding}"
                                                                Grid.Row="0" Grid.Column="2"
                                                                Background="Transparent" BorderThickness="0" Margin="2">
                                                            <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                        </Button>
                                                    </Grid>
                                                </Border>
                                                
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                        <Setter Property="Background" Value="Transparent" TargetName="_rootPaths"/>
                                                    </Trigger>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter Property="Background" Value="WhiteSmoke" TargetName="_rootPaths"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    
                                    <Button Command="{Binding PolicyViewModel.AddExcludedPathCommand}" Background="Transparent" BorderThickness="0"
                                            Grid.Row="1" HorizontalAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Style="{StaticResource AddIcon}" />
                                            <TextBlock Text="Add Excluded Path" Margin="5,0,0,0" />
                                        </StackPanel>
                                    </Button>

                                </Grid>
                            </Expander>
                        </StackPanel>
                    </ScrollViewer>


                </Grid>

            </Grid>
        </GroupBox>

    </DockPanel>
</UserControl>
