# https://riggaroo.dev/using-github-actions-to-automate-our-release-process/#:~:text=Now%20to%20actually%20run%20this%20Action%3A%20Log%20onto,name%20and%20number%20of%20the%20release%20to%20create.

name: 'Publish Release'

on: 
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: src\CosmosDbExplorer.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: src\CosmosDbExplorer.Tests\CosmosDbExplorer.Tests.csproj  # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: olegtarasov/get-tag@v2.1
      id: tag
      with:
        tagRegex: (?<version>\d.\d.\d)(?:-)(?<beta>.*)  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.

    - name: Set version on AssemblyInfo.cs
      uses: dannevesdantas/set-version-assemblyinfo@v.1.0.0
      with:
        version: ${{ steps.tag.outputs.version }}

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with: 
        nuget-version: '5.7.x'

    - name: Restore NuGet Packages
      run: nuget restore $env:Solution_Name

    - name: Build Application
      run: msbuild $env:Solution_Name /p:Configuration=Release

    - name: Zip Release folder
      uses: papeloto/action-zip@v1
      with:
        files: src\CosmosDbExplorer\bin\Release\
        dest: CosmosDbExplorer.zip

    - name: Automatic Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        files: |
          *.zip

  # Chocolatey
  chocolatey:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: olegtarasov/get-tag@v2.1
      id: tag
      with:
        tagRegex: (?<version>\d.\d.\d)(?:-)(?<beta>.*)  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.

    - name: 'Replace tokens Chocolatey files #1' 
      uses: datamonsters/replace-action@v2
      with:
        files: './src/CosmosDbExplorer/Chocolatey-Packages/cosmosdbexplorer/tools/chocolateyinstall.ps1'
        replacements: '$version=${{ steps.tag.outputs.version }},$tag-name=$GIT_TAG_NAME'

    - name: 'Replace tokens Chocolatey files #2' 
      uses: datamonsters/replace-action@v2
      with:
        files: './src/CosmosDbExplorer/Chocolatey-Packages/cosmosdbexplorer/cosmosdbexplorer.nuspec'
        replacements: '$version=${{ steps.tag.outputs.version }},$tag-name=$GIT_TAG_NAME'    

    - name: Pack Chocolatey
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: pack ./src/CosmosDbExplorer/Chocolatey-Packages/cosmosdbexplorer/cosmosdbexplorer.nuspec

    - name: Push Chocolatey
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: push ./src/CosmosDbExplorer/Chocolatey-Packages/cosmosdbexplorer/cosmosdbexplorer.${{ steps.tag.outputs.version }}.nupkg --source https://chocolatey.org/ --api-key=$CHOCOLATEY_API_KEY 

    - name: Upload chocolatey artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./src/CosmosDbExplorer/Chocolatey-Packages/cosmosdbexplorer/cosmosdbexplorer.${{ steps.tag.outputs.version }}.nupkg

  # Autoupdater
  autoupdater:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout gh-pages
      uses: actions/checkout@v2     
      with:
        ref: gh-pages
        fetch-depth: 0

    - uses: olegtarasov/get-tag@v2.1
      id: tag
      with:
        tagRegex: (?<version>\d.\d.\d)(?:-)(?<beta>.*)  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.        
    
    - name: Create autoupdate.json file
      id: create-autoupdate-json
      uses: jsdaniell/create-json@1.1.2
      with:
        name: autoupdate.json
        json: '{"version":"${{ steps.tag.outputs.version }}","url":"https://github.com/sachabruttin/CosmosDbExplorer/releases/download/$GIT_TAG_NAME/CosmosDbExplorer.zip","mandatory":false,"checksum":null,"changelog":null}'

    - run: |
        git config user.name github-actions
        git config user.email github-action@github.com
        git commit -m "updated autoupdate.json to version $GIT_TAG_NAME"
        git push
      
    