<UserControl x:Class="CosmosDbExplorer.Views.ScaleAndSettingsTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:controls="clr-namespace:CosmosDbExplorer.Infrastructure.AvalonEdit"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:infrastructure="clr-namespace:CosmosDbExplorer.Infrastructure"
             xmlns:markup="clr-namespace:CosmosDbExplorer.Infrastructure.MarkupExtensions"
             xmlns:sdk="clr-namespace:Microsoft.Azure.Documents;assembly=Microsoft.Azure.Documents.Client"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             mc:Ignorable="d" 
             Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"
             Loaded="UserControl_Loaded">
    <DockPanel LastChildFill="True">
        
        <GroupBox Header="Scale" DockPanel.Dock="Top" Margin="10,5">
            <StackPanel Margin="10,5">
                <!--<Label Content="Throughput (400 - 10,000 RU/s)"/>-->
                <Label>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Throughput ({0:N0} - {1:N0} RU/s)">
                                <Binding Path="MinThroughput" />
                                <Binding Path="MaxThroughput" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label>
                <xctk:IntegerUpDown Increment="1000" Minimum="{Binding MinThroughput}" Maximum="{Binding MaxThroughput}" 
                                    HorizontalAlignment="Left"
                                    Text="{Binding Throughput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Width="150" Margin="20,0"/>

                <TextBlock Text="{Binding EstimatedPrice, StringFormat=Estimated spend (USD): {0}}"
                           Margin="20,0"/>
            </StackPanel>
        </GroupBox>

        <GroupBox Header="Settings" DockPanel.Dock="Top" Margin="10,5">
            <StackPanel Margin="10,5">
                <Label Content="Time to live" />
                <StackPanel Orientation="Horizontal" Margin="20,5">
                    <infrastructure:RadioButtonEx Content="Off" RadioValue="Off" RadioBinding="{Binding TimeToLive}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                    <infrastructure:RadioButtonEx Content="On (no default)" RadioValue="Default" RadioBinding="{Binding TimeToLive}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                    <infrastructure:RadioButtonEx Content="On" RadioValue="On" RadioBinding="{Binding TimeToLive}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="20,5" Visibility="{Binding IsTimeLiveInSecondVisible, Converter={StaticResource boolToVisibilityConverter}}">
                    <xctk:IntegerUpDown Value="{Binding TimeToLiveInSecond}" 
                                        Width="150" Height="22" VerticalContentAlignment="Center"
                                        Minimum="1" Increment="1" />
                    <TextBlock Text="second(s)" Margin="3,0" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Visibility="{Binding PartitionKey, Converter={StaticResource nullToVisibilityConverter}}">
                    <Label Content="Partition Key" />
                    <TextBox Margin="20,5" Height="22" VerticalContentAlignment="Center"
                             IsReadOnly="True" Text="{Binding PartitionKey}" 
                             Background="{x:Static SystemColors.ControlLightBrush}"/>
                </StackPanel>
                   

            </StackPanel>
        </GroupBox>

        <GroupBox Header="Indexing Policy" Margin="10,5" Padding="0,10,0,0">
            <xcad:DockingManager AllowMixedOrientation="True" Grid.Row="1" DocumentHeaderTemplate="{StaticResource AvalonDockHeaderTemplate}">
                <xcad:LayoutRoot x:Name="_layoutRoot">
                    <xcad:LayoutPanel>
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Editor" CanClose="False" CanHide="False" IconSource="{StaticResource DesignViewIcon}">
                                <ScrollViewer Grid.Row="1" Grid.Column="1">
                                    <StackPanel Grid.Row="0" Margin="10,5">

                                        <Label Content="Automatic" />
                                        <StackPanel Orientation="Horizontal" Margin="20,5">
                                            <infrastructure:RadioButtonEx Content="Yes" Style="{StaticResource SquareRadioButtonStyle}" Width="70"
                                                                              RadioValue="True" RadioBinding="{Binding PolicyViewModel.IsAutomatic}"/>
                                            <infrastructure:RadioButtonEx Content="No" Style="{StaticResource SquareRadioButtonStyle}" Width="70"
                                                                              RadioValue="False" RadioBinding="{Binding PolicyViewModel.IsAutomatic}" />
                                        </StackPanel>

                                        <Label Content="Indexing Mode" />
                                        <StackPanel Orientation="Horizontal" Margin="20,5">
                                            <infrastructure:RadioButtonEx Content="Consitent" RadioValue="Consistent" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                                            <infrastructure:RadioButtonEx Content="Lazy" RadioValue="Lazy" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                                            <infrastructure:RadioButtonEx Content="None" RadioValue="None" RadioBinding="{Binding PolicyViewModel.Mode}" Style="{StaticResource SquareRadioButtonStyle}" Width="130" />
                                        </StackPanel>

                                        <GroupBox BorderThickness="0" Padding="10,5">
                                            <GroupBox.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Included Paths" />
                                                    <TextBlock Margin="10,0">
                                                        <Hyperlink Command="{Binding PolicyViewModel.AddIncludedPathCommand}" CommandParameter="{Binding}">
                                                            <StackPanel Orientation="Horizontal" Margin="5,0">
                                                                <TextBlock Style="{StaticResource AddIcon}" FontSize="8pt" VerticalAlignment="Center" />
                                                                <TextBlock Text="Add" Margin="5,0,0,0" />
                                                            </StackPanel>
                                                        </Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </GroupBox.Header>

                                            <ItemsControl ItemsSource="{Binding PolicyViewModel.IncludedPaths, ValidatesOnDataErrors=True}" AlternationCount="2"
                                                          MinHeight="20">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border x:Name="_rootPaths" BorderThickness="0.5" 
                                                                        Margin="2" Padding="5" BorderBrush="DarkGray">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <Label Content="Path:" Grid.Row="0" Grid.Column="0" />
                                                                <xctk:WatermarkTextBox Watermark="" Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}" Grid.Row="0" Grid.Column="1" Margin="2,2,7,2" />
                                                                <Button Command="{Binding DataContext.PolicyViewModel.RemoveIncludedPathCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                                                            CommandParameter="{Binding}"
                                                                            Grid.Row="0" Grid.Column="2"
                                                                            Background="Transparent" BorderThickness="0" Margin="2"
                                                                        ToolTip="Remove Path">
                                                                    <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                                </Button>

                                                                <Label Content="Indexes:" Grid.Row="1" Grid.Column="0" />
                                                                <ItemsControl ItemsSource="{Binding Indexes, ValidatesOnDataErrors=True}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <Grid Margin="2">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="120" />
                                                                                    <ColumnDefinition Width="120" />
                                                                                    <ColumnDefinition Width="150" />
                                                                                </Grid.ColumnDefinitions>

                                                                                <Button Command="{Binding DataContext.RemoveIndexCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                                                                            CommandParameter="{Binding}"
                                                                                            Background="Transparent" BorderThickness="0" Margin="2"
                                                                                        ToolTip="Remove Index">
                                                                                    <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                                                </Button>

                                                                                <ComboBox Grid.Column="1" SelectedValue="{Binding Kind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2,7,2"
                                                                                                ItemsSource="{Binding Source={markup:EnumBindingSource {x:Type sdk:IndexKind}}}"/>
                                                                                <ComboBox Grid.Column="2" SelectedValue="{Binding DataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2,7,2"
                                                                                                ItemsSource="{Binding AvailableDataTypes}" />

                                                                                <Grid Grid.Column="3" Margin="2,2,7,2" HorizontalAlignment="Stretch">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto" />
                                                                                        <ColumnDefinition Width="*" />
                                                                                    </Grid.ColumnDefinitions>

                                                                                    <CheckBox Content="Max" IsChecked="{Binding IsMaxPrecision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                                    VerticalAlignment="Center" Margin="2,0" Grid.Column="0"
                                                                                                    Visibility="{Binding CanSetMaxPrecision, Converter={StaticResource boolToVisibilityConverter}}"
                                                                                                    ToolTip="Maximum index precision (-1)"/>

                                                                                    <xctk:ShortUpDown  Minimum="{Binding MinPrecision}" Maximum="{Binding MaxPrecision}" 
                                                                                                            Margin="2,0" Grid.Column="1" 
                                                                                                            Value="{Binding Precision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                                                            Visibility="{Binding CanSetPrecision, Converter={StaticResource boolToVisibilityConverter}}"
                                                                                                            Watermark="default is 3"/>
                                                                                </Grid>

                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>

                                                                <TextBlock Grid.Row="2" Grid.Column="1">
                                                                    <Hyperlink Command="{Binding AddIndexCommand}">
                                                                        <StackPanel Orientation="Horizontal" Margin="5,0">
                                                                            <TextBlock Style="{StaticResource AddIcon}" FontSize="8pt" VerticalAlignment="Center" />
                                                                            <TextBlock Text="Add Index" Margin="5,0,0,0" />
                                                                        </StackPanel>
                                                                    </Hyperlink>
                                                                </TextBlock>

                                                                <!--<Button Command="{Binding AddIndexCommand}"
                                                                            Background="Transparent" BorderThickness="0"
                                                                            Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Style="{StaticResource AddIcon}" />
                                                                        <TextBlock Text="Add Index" Margin="5,0,0,0" />
                                                                    </StackPanel>
                                                                </Button>-->
                                                            </Grid>
                                                        </Border>
                                                        <DataTemplate.Triggers>
                                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                                <Setter Property="Background" Value="Transparent" TargetName="_rootPaths"/>
                                                            </Trigger>
                                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                                <Setter Property="Background" Value="WhiteSmoke" TargetName="_rootPaths"/>
                                                            </Trigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </GroupBox>

                                        <GroupBox BorderThickness="0" Padding="10,5">
                                            <GroupBox.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Excluded Paths" />
                                                    <TextBlock Margin="10,0">
                                                        <Hyperlink Command="{Binding PolicyViewModel.AddExcludedPathCommand}" CommandParameter="{Binding}">
                                                            <StackPanel Orientation="Horizontal" Margin="5,0">
                                                                <TextBlock Style="{StaticResource AddIcon}" FontSize="8pt" VerticalAlignment="Center" />
                                                                <TextBlock Text="Add" Margin="5,0,0,0" />
                                                            </StackPanel>
                                                        </Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                            </GroupBox.Header>

                                            <ItemsControl ItemsSource="{Binding PolicyViewModel.ExcludedPaths, ValidatesOnDataErrors=True}" AlternationCount="2">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border x:Name="_rootPaths" BorderThickness="0.5" 
                                                                        Margin="2" Padding="5" BorderBrush="DarkGray">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <Label Content="Path:" Grid.Row="0" Grid.Column="0" />
                                                                <xctk:WatermarkTextBox Watermark="" Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}" Grid.Row="0" Grid.Column="1" Margin="2,2,7,2" />
                                                                <Button Command="{Binding DataContext.PolicyViewModel.RemoveExcludedPathCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                                                                CommandParameter="{Binding}"
                                                                                Grid.Row="0" Grid.Column="2"
                                                                                Background="Transparent" BorderThickness="0" Margin="2"
                                                                        ToolTip="Remove Path">
                                                                    <TextBlock Style="{StaticResource DeleteIcon}" Height="16" Width="16" />
                                                                </Button>
                                                            </Grid>
                                                        </Border>

                                                        <DataTemplate.Triggers>
                                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                                <Setter Property="Background" Value="Transparent" TargetName="_rootPaths"/>
                                                            </Trigger>
                                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                                <Setter Property="Background" Value="WhiteSmoke" TargetName="_rootPaths"/>
                                                            </Trigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </GroupBox>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcad:LayoutAnchorable>

                            <xcad:LayoutAnchorable Title="JSON" CanClose="False" CanHide="False" IconSource="{StaticResource JsonIcon}">
                                <avalonEdit:TextEditor x:Name="editor" 
                                           SyntaxHighlighting="JSON"  
                                           Margin="-2,0,-2,-2"
                                           ShowLineNumbers="True"
                                           Document="{Binding Content, UpdateSourceTrigger=PropertyChanged}"
                                           IsModified="{Binding IsChanged, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ContextMenu="{StaticResource JsonEditorContextMenu}">
                                    <i:Interaction.Behaviors>
                                        <controls:TextAreaZoomBehavior x:Name="zoomBehavior" ZoomLevel="{Binding Zoom, Converter={StaticResource logConverter}}"/>
                                    </i:Interaction.Behaviors>
                                </avalonEdit:TextEditor>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutPanel>
                </xcad:LayoutRoot>
            </xcad:DockingManager>

        </GroupBox>

    </DockPanel>
</UserControl>
