<fluent:RibbonWindow  x:Class="DocumentDbExplorer.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:views="clr-namespace:DocumentDbExplorer.Views"
                      xmlns:local="clr-namespace:DocumentDbExplorer.Infrastructure"
                      xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
                      xmlns:pane="clr-namespace:DocumentDbExplorer.Views.Pane"
                      xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
                      mc:Ignorable="d"
                      Loaded="Window_Loaded"
                      Height="850" Width="1000"
                      WindowState="Normal"
                      DataContext="{Binding Main, Source={StaticResource Locator}}"
                      Title="{Binding Title}">
    <Window.Resources>
        <ResourceDictionary>
            <local:TabContentTemplateSelector x:Key="tabContentTemplateSelector">
                <local:TabContentTemplateSelector.DocumentsTemplate>
                    <DataTemplate>
                        <views:DocumentsTabView/>
                    </DataTemplate>
                </local:TabContentTemplateSelector.DocumentsTemplate>
                <local:TabContentTemplateSelector.QueryEditorTemplate>
                    <DataTemplate>
                        <views:QueryEditorView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.QueryEditorTemplate>
                <local:TabContentTemplateSelector.ImportDocumentTemplate>
                    <DataTemplate>
                        <views:ImportDocumentView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.ImportDocumentTemplate>
                <local:TabContentTemplateSelector.DatabaseViewTemplate>
                    <DataTemplate>
                        <views:DatabaseView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.DatabaseViewTemplate>
                <local:TabContentTemplateSelector.StoredProcedureViewTemplate>
                    <DataTemplate>
                        <views:StoredProcedureTabView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.StoredProcedureViewTemplate>
                <local:TabContentTemplateSelector.UserDefFuncViewTemplate>
                    <DataTemplate>
                        <views:UserDefFuncTabView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.UserDefFuncViewTemplate>
                <local:TabContentTemplateSelector.TriggerViewTemplate>
                    <DataTemplate>
                        <views:TriggerTabView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.TriggerViewTemplate>
                <local:TabContentTemplateSelector.ScaleAndSettingsTemplate>
                    <DataTemplate>
                        <views:ScaleAndSettingsTabView />
                    </DataTemplate>
                </local:TabContentTemplateSelector.ScaleAndSettingsTemplate>
            </local:TabContentTemplateSelector>

        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">

        <fluent:Ribbon x:Name="ribbon" AutomaticStateManagement="True" DockPanel.Dock="Top">
            <fluent:Ribbon.Menu>
                <fluent:Backstage >
                    <fluent:BackstageTabControl>
                        <fluent:Button Header="Add Account" Command="{Binding ShowAccountSettingsCommand}"
                                       Icon="{StaticResource AddConnectionIcon}" 
                                       KeyTip="A"/>

                        <fluent:BackstageTabItem Header="About">
                            <views:AboutView />
                        </fluent:BackstageTabItem>
                        
                        <fluent:SeparatorTabItem />
                        
                        <fluent:Button Header="Exit" Command="{Binding ExitCommand}"
                                       Icon="{StaticResource ExitIcon}"
                                       KeyTip="X"/>
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>

            <fluent:RibbonTabItem Header="Home" KeyTip="H">
                <fluent:RibbonGroupBox KeyTip="C" x:Name="Clipboard"
                                       Header="Clipboard">
                    
                    <fluent:Button Header="Paste" 
                                   KeyTip="V"
                                   Command="Paste"
                                   LargeIcon="{StaticResource PasteIcon}"
                                   Icon="{StaticResource PasteIcon}"
                                   FocusManager.IsFocusScope="True">
                        <fluent:Button.ToolTip>
                            <fluent:ScreenTip Title="Paste (Ctrl+V)"
                                              Text="Paste the contents of the Clipboard."
                                              DisableReason="Enable it do use this function"
                                              Width="190" />
                        </fluent:Button.ToolTip>
                    </fluent:Button>

                    <fluent:Button x:Name="cutButton"
                                   KeyTip="X"
                                   Header="Cut"
                                   Icon="{StaticResource CutIcon}"
                                   SizeDefinition="Middle,Small"
                                   Command="Cut"
                                   FocusManager.IsFocusScope="True">
                        <fluent:Button.ToolTip>
                            <fluent:ScreenTip Title="Cut (Ctrl+X)"
                                              Text="Cut the contents to the Clipboard."
                                              DisableReason="Cut is currently not available."
                                              Width="190" />
                        </fluent:Button.ToolTip>
                    </fluent:Button>
                    <fluent:Button x:Name="copyButton"
                                   KeyTip="C"
                                   Header="Copy"
                                   Icon="{StaticResource CopyIcon}"
                                   Command="Copy"
                                   SizeDefinition="Middle,Small"
                                   FocusManager.IsFocusScope="True">
                        <fluent:Button.ToolTip>
                            <fluent:ScreenTip Title="Copy (Ctrl+C)"
                                              Text="Copy the contents to the Clipboard."
                                              DisableReason="Copy is currently not available."
                                              Width="190"/>
                        </fluent:Button.ToolTip>
                    </fluent:Button>
                    <fluent:Button x:Name="findButton"
                                   KeyTip="F"
                                   Header="Find"
                                   Command="ApplicationCommands.Find"
                                   Icon="{StaticResource SearchIcon}"
                                   SizeDefinition="Middle,Small">
                        <fluent:Button.ToolTip>
                            <fluent:ScreenTip Title="Find (Ctrl+F)"
                                              Text="Find text in the content."
                                              DisableReason="Find is currently not available."
                                              Width="190"/>
                        </fluent:Button.ToolTip>
                    </fluent:Button>

                </fluent:RibbonGroupBox>

            </fluent:RibbonTabItem>
            
        </fluent:Ribbon>

        <fluent:StatusBar DockPanel.Dock="Bottom"
                          HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
            <fluent:StatusBarItem Title="Used memory"
                                  HorizontalAlignment="Left"
                                  Value="{Binding UsedMemory, StringFormat={}{0:##\,000} KB}" />

            <Separator HorizontalAlignment="Right" />

            <fluent:StatusBarItem Title="Zoom"
                                  HorizontalAlignment="Right"
                                  Value="{Binding Value, ElementName=zoomSlider, StringFormat={}{0:P}}" />

            <fluent:StatusBarItem Title="Test (no content, no value)"
                                  HorizontalAlignment="Right" />

            <fluent:StatusBarItem Title="Zoom Slider"
                                  HorizontalAlignment="Right">
                <Slider x:Name="zoomSlider"
                        Minimum="0.5"
                        Maximum="2.0"
                        IsDirectionReversed="False"
                        Style="{DynamicResource ZoomSliderStyle}"
                        Value="{Binding Zoom}"
                        IsSnapToTickEnabled="True"
                        TickFrequency="0.1"
                        SmallChange="0.1"
                        LargeChange="0.1"
                        ValueChanged="ZoomSlider_OnValueChanged" />
            </fluent:StatusBarItem>
        </fluent:StatusBar>

        <xcad:DockingManager DocumentsSource="{Binding Tabs}"
                             AnchorablesSource="{Binding Tools}"
                             ActiveContent="{Binding SelectedTab, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                             LayoutItemTemplateSelector="{StaticResource tabContentTemplateSelector}">
            <xcad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                        <!-- Show IsReadOnly Icon in document tab if that properties' present and true -->
                        <!--<Image Source="/Edi;component/Images/App/DocTab/Lock-icon.png"
                               Margin="3,0,0,0" VerticalAlignment="Center">
                            <Image.Visibility>
                                <PriorityBinding FallbackValue="Collapsed" >
                                    <Binding Path="Content.IsReadOnly" Mode="OneWay" Converter="{StaticResource BoolToVisibilityConverter}" />
                                </PriorityBinding>
                            </Image.Visibility>
                            <Image.ToolTip>
                                <PriorityBinding FallbackValue="">
                                    <Binding Path="Content.IsReadOnlyReason" Mode="OneWay" />
                                </PriorityBinding>
                            </Image.ToolTip>
                        </Image>-->
                    </StackPanel>
                </DataTemplate>
            </xcad:DockingManager.DocumentHeaderTemplate>

            <xcad:DockingManager.LayoutItemContainerStyleSelector>
                <pane:PaneStyleSelector>
                    <pane:PaneStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource DockBoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            <Setter Property="CanHide" Value="False" />
                        </Style>
                    </pane:PaneStyleSelector.ToolStyle>
                    <pane:PaneStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="ToolTip" Value="{Binding Model.ToolTip}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                        </Style>
                    </pane:PaneStyleSelector.DocumentStyle>
                </pane:PaneStyleSelector>
            </xcad:DockingManager.LayoutItemContainerStyleSelector>

            <xcad:LayoutRoot x:Name="_layoutRoot">
                <xcad:LayoutPanel Orientation="Horizontal">
                    <xcad:LayoutAnchorablePane Name="Connections" DockWidth="200" FloatingWidth="200" />
                    <xcad:LayoutDocumentPane />
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>

        </xcad:DockingManager>

    </DockPanel>
</fluent:RibbonWindow>
